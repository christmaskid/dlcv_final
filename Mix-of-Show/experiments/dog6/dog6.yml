# GENERATE TIME: Fri Dec  6 09:58:06 2024
# CMD:
# mixofshow/train.py -opt /content/dlcv_final/Mix-of-Show/dog6.yml --launcher pytorch

name: dog6
model_type: EDLoraModel
world_size: 1
num_gpu: 1
manual_seed: 0

# dataset and data loader settings
datasets:
  train:
    name: LoraDataset
    type: LoraDataset
    concept_list: /content/Data/jsons/dog6.json
    use_caption: true
    instance_transform:
      - { type: Resize, size: 512}
      - { type: HumanResizeCropFinal, size: 512, crop_p: 0.5 }
      - { type: ToTensor }
      - { type: Normalize, mean: [ 0.5 ], std: [ 0.5 ] }
      - { type: ShuffleCaption, keep_token_num: 1 }
      - { type: EnhanceText, enhance_type: human }
    replace_mapping:
      <TOK>: <dog6> #<hermione1> <hermione2>
    dataset_enlarge_ratio: 100
    use_shuffle: true
    num_worker_per_gpu: 2
    batch_size_per_gpu: 1
    pin_memory: true
    prefetch_mode: cuda

  val_vis:
    name: PromptDataset
    type: PromptDataset
    prompts: /content/dlcv_final/Mix-of-Show/datasets/validation_prompts/val.txt
    num_samples_per_prompt: 1
    latent_size: [4, 64, 64] #[ 4,64,64 ]
    replace_mapping:
      <TOK>: <dog6>
    use_shuffle: false
    num_worker_per_gpu: 2
    batch_size_per_gpu: 1

network_g:
  type: EDLoRA
  pretrained_path: experiments/pretrained_models/stable-diffusion-v1-4
  finetune_cfg:
    text_embedding:
      enable_tuning: true #true
      lr: !!float 0.001 #1e-3
    text_encoder:
      enable_tuning: true #true
      lora_cfg:
        rank: 4 #4
        alpha: 1 #1.0
        where: CLIPSdpaAttention
      lr: !!float 1e-05 #1e-5
    unet:
      enable_tuning: true #true
      lora_cfg:
        rank: 4 #4
        alpha: 1 #1.0
        where: CrossAttention
      lr: !!float 0.0001 #1e-4
  new_concept_token: <dog6>
  noise_offset: 0.01
  initializer_token: <rand-0.013>
  sd_version: v1
  test_sampler_type: ddim

# path
path:
  pretrain_network_g: ~

# training settings
train:
  optim_g:
    type: AdamW
    lr: !!float 0.0 # no use since we define different component lr in model
    scale_lr: false
    weight_decay: 0.01
    betas: [ 0.9, 0.999 ] # align with taming

  kde_opt:
    type: KDELoss
    loss_weight: 0.002
    bandwidth: 0.5

  drop_start_iter: -1
  unet_kv_drop_rate: 0.0

  scheduler:
    type: LinearLR
    num_epochs: 1000 #1000

  total_iter: 1000 #1000 # 5 epoch
  warmup_iter: -1  # no warm up

# validation settings
val:
  val_freq: !!float 1000
  save_img: true
  compose_visualize: true
  pbar: true
  suffix: ~  # add suffix to saved images, if None, use exp name

  sample:
    num_inference_steps: 50 #50
    guidance_scale: 7.5 #7.5

  metrics: ~

# logging settings
logger:
  print_freq: 10
  save_checkpoint_freq: !!float 200 #100
  use_tb_logger: false
  wandb:
    project: ~
    resume_id: ~

# dist training settings
dist_params:
  backend: nccl
  port: 29500
