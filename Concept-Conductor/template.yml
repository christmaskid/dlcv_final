name: <name>
manual_seed: 0
mixed_precision: fp16
gradient_accumulation_steps: 1

# dataset and data loader settings
datasets:
  train:
    name: LoraDataset
    concept_list:  <concept_list>
    use_caption: true
    use_mask: true
    instance_transform:
      - { type: HumanResizeCropFinalV3, size: 512, crop_p: 0.5 }    
      - { type: ToTensor }
      - { type: Normalize, mean: [ 0.5 ], std: [ 0.5 ] }
      - { type: ShuffleCaption, keep_token_num: 1 }
      - { type: EnhanceText, enhance_type: object }
    replace_mapping:
      <TOK>: <replace_mapping>
    batch_size_per_gpu: 2
    dataset_enlarge_ratio: 500

  val_vis:
    name: PromptDataset
    prompts: <prompts_path>
    num_samples_per_prompt: 1
    latent_size: <latent_size> #[ 4,64,64 ]
    replace_mapping:
      <TOK>: <replace_mapping>
    batch_size_per_gpu: 4

models:
  pretrained_path: experiments/pretrained_models/stable-diffusion-2-1
  enable_edlora: true  # true means ED-LoRA, false means vallina LoRA
  finetune_cfg:
    text_embedding:
      enable_tuning: <embedding_enable_tuning> #true
      lr: !!float <embedding_lr> #1e-3
    text_encoder:
      enable_tuning: <text_encoder_enable_tuning> #true
      lora_cfg:
        rank: <lora_rank> #4
        alpha: <lora_alpha> #1.0
        where: CLIPSdpaAttention
      lr: !!float <text_encoder_lr> #1e-5
    unet:
      enable_tuning: <unet_enable_tuning> #true
      lora_cfg:
        rank: <lora_rank> #4
        alpha: <lora_alpha> #1.0
        where: CrossAttention
      lr: !!float <unet_lr> #1e-4
  new_concept_token: <new_concept_token>
  noise_offset: 0.01
  initializer_token: <rand-0.013>+<semantic>
  attn_reg_weight: 0.01
  reg_full_identity: false
  use_mask_loss: true
  gradient_checkpoint: false
  enable_xformers: true

# path
path:
  pretrain_network: ~

# training settings
train:
  optim_g:
    type: AdamW
    lr: !!float 0.0 # no use since we define different component lr in model
    weight_decay: 0.01
    betas: [ 0.9, 0.999 ] # align with taming

  # dropkv
  unet_kv_drop_rate: 0
  scheduler: linear
  emb_norm_threshold: !!float 5.5e-1

# validation settings
val:
  val_during_save: true
  compose_visualize: true
  alpha_list: [0, 0.7, 1.0] # 0 means only visualize embedding (without lora weight)
  sample:
    num_inference_steps: <num_inference_steps> #50
    guidance_scale: <guidance_scale> #7.5

# logging settings
logger:
  print_freq: 10
  save_checkpoint_freq: !!float <save_checkpoint_freq> #10000